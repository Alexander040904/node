import React, { useEffect, useState } from "react";

function App() {
  const [data, setData] = useState([]);
  const [error, setError] = useState(null);

  useEffect(() => {
    fetch("https://api.example.com/data")
      .then((response) => {
        if (!response.ok) {
          throw new Error("Error al obtener los datos");
        }
        return response.json();
      })
      .then((data) => setData(data))
      .catch((error) => setError(error.message));
  }, []); // El arreglo vac√≠o asegura que se ejecute solo una vez al montar el componente.

  return (
    <div>
      <h1>Datos de la API</h1>
      {error && <p style={{ color: "red" }}>{error}</p>}
      <ul>
        {data.map((item, index) => (
          <li key={index}>{item.name}</li>
        ))}
      </ul>
    </div>
  );
}

export default App;
import React, { useState } from "react";

function App() {
  const [response, setResponse] = useState(null);

  const sendData = async () => {
    try {
      const result = await fetch("https://api.example.com/data", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ name: "John Doe", age: 30 }), // Datos enviados al servidor
      });

      const data = await result.json();
      setResponse(data);
    } catch (error) {
      console.error("Error al enviar datos:", error);
    }
  };

  return (
    <div>
      <h1>Enviar datos</h1>
      <button onClick={sendData}>Enviar</button>
      {response && <p>Respuesta del servidor: {JSON.stringify(response)}</p>}
    </div>
  );
}

export default App;

const updateData = async () => {
  try {
    const response = await fetch("https://api.example.com/data/1", {
      method: "PUT",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({ name: "Jane Doe", age: 35 }), // Datos actualizados
    });

    const data = await response.json();
    console.log("Datos actualizados:", data);
  } catch (error) {
    console.error("Error al actualizar:", error);
  }
};

const deleteData = async () => {
  try {
    const response = await fetch("https://api.example.com/data/1", {
      method: "DELETE",
    });

    if (response.ok) {
      console.log("Recurso eliminado");
    } else {
      console.error("Error al eliminar el recurso");
    }
  } catch (error) {
    console.error("Error en la solicitud DELETE:", error);
  }
};
